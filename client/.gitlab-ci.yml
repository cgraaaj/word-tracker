
stages:
  # - test
   - build
   - deploy
# test:
#   stage: test
#   before_script:
#     - docker build -t raju6713/docker-learn-react -f Dockerfile.dev .
#   script:
#     - echo "Testing App"
#     - docker run -e CI=true raju6713/docker-learn-react npm run test
#     - echo "Test successfully!"
#   tags: 
#     - ci

build:
  stage: build
  image: docker:stable
  only:
    - master
  script:
    - apk add --no-cache docker-compose
    - echo "REACT_APP_DICTIONARY_API=$REACT_APP_DICTIONARY_API" > $(pwd)/.env 
    - echo "REACT_APP_WORDTRACKER_API=$REACT_APP_WORDTRACKER_API" >>  $(pwd)/.env 
    - docker-compose build lincolns_dictionary
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push raju6713/lincolns_dictionary:latest
    - echo cleaning images
    - docker system prune -f
  tags:
    - ci
  
deploy:
  stage: deploy
  image: docker:stable
  script:
    - docker pull raju6713/lincolns_dictionary
    # - if [ "$(docker ps -a | grep dictionary)" ]; then docker stop dictionary; fi
    - if docker ps -q --filter "name=${APP_NAME}" | grep -q .; then docker stop ${APP_NAME} && docker rm -fv ${APP_NAME}; fi
    - docker run -d -e TZ=Asia/Kolkata -e NGINX_PORT=${NGINX_PORT} -e NGINX_DICTIONARY_API=${NGINX_DICTIONARY_API} -e NGINX_WORD_TRACKER_API=${NGINX_WORD_TRACKER_API} -p 3006:80 --restart unless-stopped --name=${APP_NAME} raju6713/lincolns_dictionary
  only:
    - master
  tags:
    - ci
